Wandb initialized for run: test_run_1743718767 in project: 2697134-assignment1
Using device: cuda
Initializing tokenizer...
Tokenizer initialized.
Derived and sanitized model name: pretrained-sentiment-gpt2

========================================
Loading and testing model 'pretrained-sentiment-gpt2' from: .\pretrained-sentiment-gpt2\ckpt.pt
========================================
Loading checkpoint...
C:\Users\GOKTURK\DI725_ASSIGNMENT_1\test.py:291: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(ckpt_path, map_location=args.device)
Checkpoint loaded.
Using block_size from checkpoint: 256
Setting up dataset using test CSV: data/subdata/test.csv
Loading test data from data/subdata/test.csv
Loaded 30 valid test examples from data/subdata/test.csv
DataLoader setup complete with 2 batches.
Initializing model...
number of parameters: 124.18M
Model structure initialized.
Loading model state dictionary...
Model state loaded (strict=False).
Model moved to device: cuda
Starting model evaluation...
Starting evaluation on cuda...
  Processing batch 2/2...
Evaluation complete. Calculating metrics...
Model evaluation completed.

--- Test Results ---
Model: pretrained-sentiment-gpt2 (.\pretrained-sentiment-gpt2\ckpt.pt)
Test Set: data/subdata/test.csv
Accuracy: 0.9000
F1 Score (Weighted): 0.8977

Classification Report:
              precision    recall  f1-score   support

    negative       1.00      1.00      1.00        10
     neutral       0.77      1.00      0.87        10
    positive       1.00      0.70      0.82        10

    accuracy                           0.90        30
   macro avg       0.92      0.90      0.90        30
weighted avg       0.92      0.90      0.90        30


Confusion Matrix:
       negative    neutral     positive
negative  10         0          0
neutral   0          10         0
positive  0          3          7
---------------------------------------------
Attempting to save results to: test_results\pretrained-sentiment-gpt2_results.txt
Results saved successfully to test_results\pretrained-sentiment-gpt2_results.txt
Confusion matrix visualization saved to test_results\pretrained-sentiment-gpt2_confusion_matrix.png
Logging results to wandb...
Preparing confusion matrix plot for wandb for model pretrained-sentiment-gpt2...
  wandb.plot submodule found.
  Data types - Labels: <class 'list'>, Preds: <class 'list'>
  Data lengths - Labels: 30, Preds: 30
  Confusion matrix plot generated and added to logs with key: pretrained-sentiment-gpt2/test/confusion_matrix_plot
Attempting wandb.log() for model pretrained-sentiment-gpt2...
Wandb logging completed for model pretrained-sentiment-gpt2.
Cleaning up resources for model pretrained-sentiment-gpt2...
CUDA cache cleared.
Derived and sanitized model name: scratch-sentiment-gpt2

========================================
Loading and testing model 'scratch-sentiment-gpt2' from: .\scratch-sentiment-gpt2\ckpt.pt
========================================
Loading checkpoint...
C:\Users\GOKTURK\DI725_ASSIGNMENT_1\test.py:291: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(ckpt_path, map_location=args.device)
Checkpoint loaded.
Using block_size from checkpoint: 256
Setting up dataset using test CSV: data/subdata/test.csv
Loading test data from data/subdata/test.csv
Loaded 30 valid test examples from data/subdata/test.csv
DataLoader setup complete with 2 batches.
Initializing model...
number of parameters: 124.08M
Model structure initialized.
Loading model state dictionary...
Model state loaded (strict=False).
Model moved to device: cuda
Starting model evaluation...
Starting evaluation on cuda...
  Processing batch 2/2...
Evaluation complete. Calculating metrics...
Model evaluation completed.

--- Test Results ---
Model: scratch-sentiment-gpt2 (.\scratch-sentiment-gpt2\ckpt.pt)
Test Set: data/subdata/test.csv
Accuracy: 0.6667
F1 Score (Weighted): 0.5986

Classification Report:
              precision    recall  f1-score   support

    negative       1.00      0.90      0.95        10
     neutral       0.50      1.00      0.67        10
    positive       1.00      0.10      0.18        10

    accuracy                           0.67        30
   macro avg       0.83      0.67      0.60        30
weighted avg       0.83      0.67      0.60        30


Confusion Matrix:
       negative    neutral     positive
negative  9          1          0
neutral   0          10         0
positive  0          9          1
---------------------------------------------
Attempting to save results to: test_results\scratch-sentiment-gpt2_results.txt
Results saved successfully to test_results\scratch-sentiment-gpt2_results.txt
Confusion matrix visualization saved to test_results\scratch-sentiment-gpt2_confusion_matrix.png
Logging results to wandb...
Preparing confusion matrix plot for wandb for model scratch-sentiment-gpt2...
  wandb.plot submodule found.
  Data types - Labels: <class 'list'>, Preds: <class 'list'>
  Data lengths - Labels: 30, Preds: 30
  Confusion matrix plot generated and added to logs with key: scratch-sentiment-gpt2/test/confusion_matrix_plot
Attempting wandb.log() for model scratch-sentiment-gpt2...
Wandb logging completed for model scratch-sentiment-gpt2.
Cleaning up resources for model scratch-sentiment-gpt2...
CUDA cache cleared.
